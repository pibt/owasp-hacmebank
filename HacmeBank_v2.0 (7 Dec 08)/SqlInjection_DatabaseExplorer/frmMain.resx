<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>